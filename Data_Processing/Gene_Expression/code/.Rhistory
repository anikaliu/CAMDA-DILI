arrange(desc(n))
View(freq)
freq
indication_side<-freq%>%column_to_rownames('INDICATION_CLASS')
pheatmap(t(mat%>%
column_to_rownames('compound_tggates')), nsets = 100, cluster_cols = F, cluster_rows = F, border_color = 'white', annotation_col = indication_side)
pheatmap(t(mat%>%
column_to_rownames('compound_tggates')), nsets = 100, cluster_cols = F, cluster_rows = F, border_color = 'white', annotation_row = indication_side)
unique(freq$n)
indication_side<-freq%>%column_to_rownames('INDICATION_CLASS')%>%
mutate(n=ifelse(INDICATION_CLASS=='Other', 10,n))
indication_side<-freq%>%
mutate(n=ifelse(INDICATION_CLASS=='Other', 10,n))%>%column_to_rownames('INDICATION_CLASS')
pheatmap(t(mat%>%
column_to_rownames('compound_tggates')), nsets = 100, cluster_cols = F,
cluster_rows = F, border_color = 'white',
annotation_row = indication_side)
freq
allcompounds$MECHANISM_OF_ACTION
indication<-allcompounds%>%select(compound_chembl,compound_tggates, INDICATION_CLASS)%>%unique()%>%filter(INDICATION_CLASS!='NULL')%>%
separate_rows(INDICATION_CLASS, sep = '; ')%>%unique()%>%
group_by(INDICATION_CLASS)%>%
summarise(n=n())%>%
mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
group_by(INDICATION_CLASS)%>%
summarise(n=sum(n))%>%
arrange(desc(n))
indication<-allcompounds%>%select(compound_chembl,compound_tggates, INDICATION_CLASS)%>%unique()%>%filter(INDICATION_CLASS!='NULL')%>%
separate_rows(INDICATION_CLASS, sep = '; ')%>%unique()%>%
group_by(INDICATION_CLASS)%>%
summarise(n=n())%>%
mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
group_by(INDICATION_CLASS)%>%
summarise(n=sum(n))%>%
arrange(desc(n))%>%
mutate(INDICATION_CLASS=factor(INDICATION_CLASS, levels=c(setdiff(INDICATION_CLASS,"Other" ),"Other")))
indication
indication
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))
indication<-allcompounds%>%select(compound_chembl,compound_tggates, INDICATION_CLASS)%>%unique()%>%filter(INDICATION_CLASS!='NULL')%>%
separate_rows(INDICATION_CLASS, sep = '; ')%>%unique()%>%
group_by(INDICATION_CLASS)%>%
summarise(n=n())%>%
mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
group_by(INDICATION_CLASS)%>%
summarise(n=sum(n))%>%
arrange(desc(n))%>%
mutate(INDICATION_CLASS=factor(INDICATION_CLASS, levels=rev(c(setdiff(INDICATION_CLASS,"Other" ),"Other"))))
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
geom_text(aes(label=n))
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
geom_text(aes(label=n))+
theme_bw()
indication<-allcompounds%>%select(compound_chembl,compound_tggates, INDICATION_CLASS)%>%unique()%>%filter(INDICATION_CLASS!='NULL')%>%
separate_rows(INDICATION_CLASS, sep = '; ')%>%unique()%>%
group_by(INDICATION_CLASS)%>%
summarise(n=n())%>%
#mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
group_by(INDICATION_CLASS)%>%
summarise(n=sum(n))%>%
arrange(desc(n))%>%
mutate(INDICATION_CLASS=factor(INDICATION_CLASS, levels=rev(c(setdiff(INDICATION_CLASS,"Other" ),"Other"))))
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
geom_text(aes(label=n))+
theme_bw()+
scale_x_continuous()
indication<-allcompounds%>%select(compound_chembl,compound_tggates, INDICATION_CLASS)%>%unique()%>%filter(INDICATION_CLASS!='NULL')%>%
separate_rows(INDICATION_CLASS, sep = '; ')%>%unique()%>%
group_by(INDICATION_CLASS)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))%>%
filter(n>1)%>%
mutate(INDICATION_CLASS=factor(INDICATION_CLASS, levels=rev(c(setdiff(INDICATION_CLASS,"Other" ),"Other"))))
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
geom_text(aes(label=n))+
theme_bw()+
scale_x_continuous()
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
theme_bw()+
scale_x_continuous()
indication<-allcompounds%>%select(compound_chembl,compound_tggates, INDICATION_CLASS, THERAPEUTIC_FLAG)%>%unique()%>%filter(INDICATION_CLASS!='NULL')%>%
separate_rows(INDICATION_CLASS, sep = '; ')%>%unique()
indication<-allcompounds%>%select(compound_chembl,compound_tggates, INDICATION_CLASS, THERAPEUTIC_FLAG)%>%unique()%>%filter(INDICATION_CLASS!='NULL', THERAPEUTIC_FLAG==1)%>%
separate_rows(INDICATION_CLASS, sep = '; ')%>%unique()%>%
group_by(INDICATION_CLASS)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))%>%
filter(n>1)%>%
mutate(INDICATION_CLASS=factor(INDICATION_CLASS, levels=rev(c(setdiff(INDICATION_CLASS,"Other" ),"Other"))))
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
theme_bw()+
scale_x_continuous()
indication<-allcompounds%>%select(compound_chembl,compound_tggates, INDICATION_CLASS, THERAPEUTIC_FLAG)%>%unique()%>%filter(INDICATION_CLASS!='NULL', THERAPEUTIC_FLAG==1)%>%
separate_rows(INDICATION_CLASS, sep = '; ')%>%unique()%>%
group_by(INDICATION_CLASS)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))%>%
#  filter(n>1)%>%
mutate(INDICATION_CLASS=factor(INDICATION_CLASS, levels=rev(c(setdiff(INDICATION_CLASS,"Other" ),"Other"))))
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
theme_bw()+
scale_x_continuous()
allcompounds$MESH_HEADING
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
theme_bw()
indication<-allcompounds%>%select(compound_chembl,compound_tggates, INDICATION_CLASS, THERAPEUTIC_FLAG)%>%unique()%>%filter(INDICATION_CLASS!='NULL', THERAPEUTIC_FLAG==1)%>%
separate_rows(INDICATION_CLASS, sep = '; ')%>%unique()%>%
group_by(INDICATION_CLASS)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))%>%
filter(n>1)%>%
mutate(INDICATION_CLASS=factor(INDICATION_CLASS, levels=rev(c(setdiff(INDICATION_CLASS,"Other" ),"Other"))))
ggplot(indication, aes(x=n, y=INDICATION_CLASS)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
theme_bw()
MESH_HEADING<-allcompounds%>%select(compound_chembl,compound_tggates, MESH_HEADING, THERAPEUTIC_FLAG)%>%unique()%>%filter(MESH_HEADING!='NULL', THERAPEUTIC_FLAG==1)%>%
separate_rows(MESH_HEADING, sep = '; ')%>%unique()%>%
group_by(MESH_HEADING)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))%>%
filter(n>1)%>%
mutate(INDICATION_CLASS=factor(MESH_HEADING, levels=rev(c(setdiff(MESH_HEADING,"Other" ),"Other"))))
ggplot(MESH_HEADING, aes(x=n, y=MESH_HEADING)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
theme_bw()
MESH_HEADING<-allcompounds%>%select(compound_chembl,compound_tggates, MESH_HEADING, THERAPEUTIC_FLAG)%>%unique()%>%filter(MESH_HEADING!='NULL', THERAPEUTIC_FLAG==1)%>%
separate_rows(MESH_HEADING, sep = '; ')%>%unique()%>%
group_by(MESH_HEADING)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))%>%
filter(n>2)%>%
mutate(INDICATION_CLASS=factor(MESH_HEADING, levels=rev(c(setdiff(MESH_HEADING,"Other" ),"Other"))))
MESH_HEADING<-allcompounds%>%select(compound_chembl,compound_tggates, MESH_HEADING, THERAPEUTIC_FLAG)%>%unique()%>%filter(MESH_HEADING!='NULL', THERAPEUTIC_FLAG==1)%>%
separate_rows(MESH_HEADING, sep = '; ')%>%unique()%>%
group_by(MESH_HEADING)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))%>%
filter(n>3)%>%
mutate(INDICATION_CLASS=factor(MESH_HEADING, levels=rev(c(setdiff(MESH_HEADING,"Other" ),"Other"))))
MESH_HEADING<-allcompounds%>%select(compound_chembl,compound_tggates, MESH_HEADING, THERAPEUTIC_FLAG)%>%unique()%>%filter(MESH_HEADING!='NULL', THERAPEUTIC_FLAG==1)%>%
separate_rows(MESH_HEADING, sep = '; ')%>%unique()%>%
group_by(MESH_HEADING)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))%>%
filter(n>4)%>%
mutate(INDICATION_CLASS=factor(MESH_HEADING, levels=rev(c(setdiff(MESH_HEADING,"Other" ),"Other"))))
ggplot(MESH_HEADING, aes(x=n, y=MESH_HEADING)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
theme_bw()
MESH_HEADING<-allcompounds%>%select(compound_chembl,compound_tggates, MESH_HEADING, THERAPEUTIC_FLAG)%>%unique()%>%filter(MESH_HEADING!='NULL', THERAPEUTIC_FLAG==1)%>%
separate_rows(MESH_HEADING, sep = '; ')%>%unique()%>%
group_by(MESH_HEADING)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))%>%
filter(n>4)%>%
mutate(MESH_HEADING=factor(MESH_HEADING, levels=rev(c(setdiff(MESH_HEADING,"Other" ),"Other"))))
ggplot(MESH_HEADING, aes(x=n, y=MESH_HEADING)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=INDICATION_CLASS, yend=INDICATION_CLASS))+
theme_bw()
ggplot(MESH_HEADING, aes(x=n, y=MESH_HEADING)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MESH_HEADING, yend=MESH_HEADING))+
theme_bw()
ATC<-allcompounds%>%select(compound_chembl,compound_tggates, LEVEL5, THERAPEUTIC_FLAG)%>%unique()%>%filter(LEVEL5!='NULL', THERAPEUTIC_FLAG==1)%>%
group_by(LEVEL5)%>%
summarise(n=n())%>%
#  mutate(INDICATION_CLASS=ifelse(n==1,  "Other",INDICATION_CLASS))%>%
# group_by(INDICATION_CLASS)%>%
#  summarise(n=sum(n))%>%
arrange(desc(n))
View(ATC)
ATC<-allcompounds%>%select(compound_chembl,compound_tggates, LEVEL5, THERAPEUTIC_FLAG)%>%
unique()%>%filter(LEVEL5!='NULL', THERAPEUTIC_FLAG==1)
View(ATC)
ATC<-allcompounds%>%select(compound_chembl,compound_tggates, LEVEL5, THERAPEUTIC_FLAG)%>%
unique()%>%filter(LEVEL5!='NULL', THERAPEUTIC_FLAG==1)%>%
mutate('Main_Group'=str_sub(LEVEL5, start = 1,end=1))
head(ATC)
ATC<-allcompounds%>%select(compound_chembl,compound_tggates, LEVEL5, THERAPEUTIC_FLAG)%>%
unique()%>%filter(LEVEL5!='NULL', THERAPEUTIC_FLAG==1)%>%
mutate('Main_Group'=str_sub(LEVEL5, start = 1,end=1),
'Therapeutic_Group')=str_sub(LEVEL5, start = 2,end=3),
'Pharmacological subgroup'=str_sub(LEVEL5, start = 1,end=1))
ATC<-allcompounds%>%select(compound_chembl,compound_tggates, LEVEL5, THERAPEUTIC_FLAG)%>%
unique()%>%filter(LEVEL5!='NULL', THERAPEUTIC_FLAG==1)%>%
mutate('Main_Group'=str_sub(LEVEL5, start = 1,end=1),
'Therapeutic_Group'=str_sub(LEVEL5, start = 2,end=3),
'Pharmacological subgroup'=str_sub(LEVEL5, start = 1,end=1))
head(ATC)
ATC<-allcompounds%>%select(compound_chembl,compound_tggates, LEVEL5, THERAPEUTIC_FLAG)%>%
unique()%>%filter(LEVEL5!='NULL', THERAPEUTIC_FLAG==1)%>%
mutate('Main_Group'=str_sub(LEVEL5, start = 1,end=1),
'Therapeutic_Group'=str_sub(LEVEL5, start = 2,end=3),
'Pharmacological subgroup'=str_sub(LEVEL5, start = 1,end=1))%>%
select(compound_tggates, Main_Group)%>%
unique()
ATC<-allcompounds%>%select(compound_chembl,compound_tggates, LEVEL5, THERAPEUTIC_FLAG)%>%
unique()%>%filter(LEVEL5!='NULL', THERAPEUTIC_FLAG==1)%>%
mutate('Main_Group'=str_sub(LEVEL5, start = 1,end=1),
'Therapeutic_Group'=str_sub(LEVEL5, start = 2,end=3),
'Pharmacological subgroup'=str_sub(LEVEL5, start = 1,end=1))%>%
select(compound_tggates, Main_Group)%>%
unique()%>%
group_by(Main_Group)%>%
summarise(n=n())
ggplot(ATC, aes(x=n, y=Main_Group)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=Main_Group, yend=Main_Group))+
theme_bw()
View(ATC)
MECHANISM_OF_ACTION<-allcompounds%>%select(compound_chembl,compound_tggates, LEVEL5, MECHANISM_OF_ACTION)%>%
unique()%>%filter(MECHANISM_OF_ACTION!='NULL', THERAPEUTIC_FLAG==1)%>%
select(compound_tggates, MECHANISM_OF_ACTION)%>%
unique()%>%
group_by(MECHANISM_OF_ACTION)%>%
summarise(n=n())
MECHANISM_OF_ACTION<-allcompounds%>%select(compound_chembl,compound_tggates, THERAPEUTIC_FLAG, MECHANISM_OF_ACTION)%>%
unique()%>%filter(MECHANISM_OF_ACTION!='NULL', THERAPEUTIC_FLAG==1)%>%
select(compound_tggates, MECHANISM_OF_ACTION)%>%
unique()%>%
group_by(MECHANISM_OF_ACTION)%>%
summarise(n=n())
View(MECHANISM_OF_ACTION)
ggplot(MECHANISM_OF_ACTION%>%filter(n>1), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()
ggplot(MECHANISM_OF_ACTION%>%filter(n>1)%>%arrange(n), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()
ggplot(MECHANISM_OF_ACTION%>%filter(n>1)%>%arrange(n)%>%mutate(MECHANISM_OF_ACTION=factor(MECHANISM_OF_ACTION, levels=MECHANISM_OF_ACTION)), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()
ggplot(MECHANISM_OF_ACTION%>%filter(n>1)%>%arrange(n)%>%mutate(MECHANISM_OF_ACTION=factor(MECHANISM_OF_ACTION, levels=MECHANISM_OF_ACTION)), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()+
scale_x_discrete()
ggplot(MECHANISM_OF_ACTION%>%filter(n>1)%>%arrange(n)%>%mutate(MECHANISM_OF_ACTION=factor(MECHANISM_OF_ACTION, levels=MECHANISM_OF_ACTION)), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()+
scale_x_continuos(breaks=seq(0,11,1))
ggplot(MECHANISM_OF_ACTION%>%filter(n>1)%>%arrange(n)%>%mutate(MECHANISM_OF_ACTION=factor(MECHANISM_OF_ACTION, levels=MECHANISM_OF_ACTION)), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()+
scale_x_continuous(breaks=seq(0,11,1))
ggplot(MECHANISM_OF_ACTION%>%filter(n>1)%>%arrange(n)%>%mutate(MECHANISM_OF_ACTION=factor(MECHANISM_OF_ACTION, levels=MECHANISM_OF_ACTION)), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()+
scale_x_continuous(breaks=seq(1,9,2), minor_breaks =seq(0,11,1) )
ggplot(MECHANISM_OF_ACTION%>%filter(n>1)%>%arrange(n)%>%mutate(MECHANISM_OF_ACTION=factor(MECHANISM_OF_ACTION, levels=MECHANISM_OF_ACTION)), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()+
scale_x_continuous(breaks=seq(2,10,2), minor_breaks =seq(0,11,1) )
ggplot(MECHANISM_OF_ACTION%>%arrange(n)%>%mutate(MECHANISM_OF_ACTION=factor(MECHANISM_OF_ACTION, levels=MECHANISM_OF_ACTION)), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()+
scale_x_continuous(breaks=seq(2,10,2), minor_breaks =seq(0,11,1) )
ggplot(MECHANISM_OF_ACTION%>%arrange(n,MECHANISM_OF_ACTION)%>%mutate(MECHANISM_OF_ACTION=factor(MECHANISM_OF_ACTION, levels=MECHANISM_OF_ACTION)), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()+
scale_x_continuous(breaks=seq(2,10,2), minor_breaks =seq(0,11,1) )
ggplot(MECHANISM_OF_ACTION%>%arrange(n,desc(MECHANISM_OF_ACTION))%>%mutate(MECHANISM_OF_ACTION=factor(MECHANISM_OF_ACTION, levels=MECHANISM_OF_ACTION)), aes(x=n, y=MECHANISM_OF_ACTION)) +
geom_point() +
geom_segment( aes(x=0, xend=n, y=MECHANISM_OF_ACTION, yend=MECHANISM_OF_ACTION))+
theme_bw()+
scale_x_continuous(breaks=seq(2,10,2), minor_breaks =seq(0,11,1) )
getwd()
sessionInfo()
??bayes
Comp_GC = read.csv("../data/GexClinical_pertiname.csv") # Load comps with gene exp and clinical data
setwd("~/Documents/GitHub/CAMDA-DILI/Data_Processing/Gene_Expression/code")
Comp_GC = read.csv("../data/GexClinical_pertiname.csv") # Load comps with gene exp and clinical data
Comp_GC
#load(file.choose()) # Load ALL GENE EXP DATA - is file './CAMDA_l1000_1314compounds-GSE92742_Level5_gct.rda'
load(file = "../data/CAMDA_l1000_1314compounds-GSE92742_Level5_gct.rda")
#load(file.choose()) # Load ALL GENE EXP DATA - is file './CAMDA_l1000_1314compounds-GSE92742_Level5_gct.rda'
load(file = "../data/CAMDA_l1000_1314compounds-GSE92742_Level5_gct.rda")
data_GC = sum_cp[sum_cp$pert_iname %in% Comp_GC$x,] # unique comp-cell-dose-time with GC data
Comp_GC
Comp_GC$x
#load(file.choose()) # Load ALL GENE EXP DATA - is file './CAMDA_l1000_1314compounds-GSE92742_Level5_gct.rda'
load(file = "~/Downloads/CAMDA_l1000_1314compounds-GSE92742_Level5_gct.rda")
#load(file.choose()) # Load ALL GENE EXP DATA - is file './CAMDA_l1000_1314compounds-GSE92742_Level5_gct.rda'
load(file = "~/Downloads/CAMDA_l1000_1314compounds-GSE92742_Level5_gct.rda")
library(pheatmap)
library(tidyverse)
library(ggrepel)
library(ggExtra)
library(RColorBrewer)
library(matrixStats)
library(clusterProfiler)
library(biomaRt)
library(msigdbr)
df<-read.csv('../../Data_Processing/Structure_Standardization_And_Clustering/data/standardized_compounds_excl_ambiguous.csv')
df_featimp<-read.csv('../data/Model_Results_Parameters/PT/feature_importances_PT.csv')
df_targetswinfo<-read.delim('../../Data_Processing/Target_Prediction/data/training_set_predicted_targets.txt')
colnames(df_targetswinfo)<-str_extract(colnames(df_targetswinfo), pattern = '\\w+$')
# ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl")
# annotation <- getBM(attributes=c("uniprotswissprot","hgnc_symbol", 'entrezgene_id'),
#                     filters="uniprotswissprot",
#                     values=df_targetswinfo$Uniprot,
#                     mart=ensembl)
# colnames(annotation)<-c('Uniprot','Symbol','entrez')
# write.csv(annotation, '../data/enrichment/annotation_gene.csv')
annotation=read.csv('../data/enrichment/annotation_gene.csv', row.names = 1)
df_target<-df_targetswinfo[,-(1:16)]
df_target[(df_target==NaN)]<-NA
rownames(df_target)<-df_targetswinfo$Uniprot
df_targetinfo<-df_targetswinfo[,(1:16)]
#Function to run wilcoxon
runwilcoxon<-function(df_DILI, df_NoDILI, alternative="greater"){
result<-as.data.frame(matrix(NA, nrow = ncol(df_DILI), ncol=2))
colnames(result)<-c("statistic","p.value")
rownames(result)<-colnames(df_DILI)
for (index in 1:ncol(df_DILI)){
feature=colnames(df_DILI)[index]
contrast<-wilcox.test(x=df_DILI[,index],y=df_NoDILI[,index], alternative=alternative)
result$statistic[index]=contrast$statistic
result$p.value[index]=contrast$p.value
}
result$p.adj<-p.adjust(result$p.value, method="fdr")
return(result)
}
#Wrapper for running wilcoxon
rundiliwilcoxon<-function(DILIclass=c('vMost-DILI-Concern'), NoDILIclass=c('vNo-DILI-Concern')){
#Select DILI/NoDILI compounds
NoDILI<-df%>%filter(vDILIConcern %in% NoDILIclass)
df_NoDILI_pre<-as.data.frame(t(df_target[,which(colnames(df_target) %in% NoDILI$PubChem_CID)]))
DILI<-df%>%filter(vDILIConcern %in% DILIclass)
df_DILI_pre<-as.data.frame(t(df_target[,which(colnames(df_target) %in% DILI$PubChem_CID)]))
#Filter out those with no variance in probability in both classes
accept<-((apply(df_NoDILI_pre, 2, function(x) var(x, na.rm = T))>0)&
(apply(df_DILI_pre, 2, function(x) var(x, na.rm = T))>0))
df_NoDILI<-df_NoDILI_pre[,which(accept==TRUE)]
df_DILI<-df_DILI_pre[,which(accept==TRUE)]
#Run Wilcoxon
result<-runwilcoxon(df_DILI = df_DILI, df_NoDILI = df_NoDILI, alternative = "greater")
return(result)
}
df_target
mcnc<-rundiliwilcoxon(DILIclass=c('vMost-DILI-Concern'), NoDILIclass=c('vNo-DILI-Concern'))
mclcnc<-rundiliwilcoxon(DILIclass=c('vLess-DILI-Concern','vMost-DILI-Concern'), NoDILIclass=c('vNo-DILI-Concern'))
all<-rundiliwilcoxon(DILIclass=c('vLess-DILI-Concern','vMost-DILI-Concern'), NoDILIclass=c('vNo-DILI-Concern', 'sider_inactive'))
allfeat<-data.frame('Uniprot'=rownames(mcnc),
'mcnc'=mcnc$p.adj,
'mclcnc'=mclcnc$p.adj,
'all'=all$p.adj)%>%
left_join(annotation)
df_plotting<-allfeat%>%left_join(df_featimp)
df_plotting$label<-df_plotting$Symbol
df_plotting$label[which(df_plotting$RF_mcnc<0.0025&abs(df_plotting$SVM_mcnc)<0.4)]<-NA
df_plotting$label[which(df_plotting$mcnc>0.05)]<-NA
df_plotting$`Enrichment in DILI compounds`<-ifelse(df_plotting$mcnc<0.05,'Significant', 'Insignificant')
df_plotting<-df_plotting[order(df_plotting$mcnc),]
df_plotting$Uniprot<-factor(df_plotting$Uniprot, levels=rev(unique(df_plotting$Uniprot)))
df_sig=df_plotting%>%filter(mcnc<0.05)
screenlist=quantile(df_sig[,which(colnames(df_sig)==name)], probs=seq(0.9,1, 0.005))
t=quantile(df_sig[,which(colnames(df_sig)=='RF_mcnc')], probs=0.97)
t
df_sig%>%filter(RF_mcnc>t)
dim(df_sig%>%filter(RF_mcnc>t))
19/1673
citation(msigdbr)
citation('msigdbr')
19/1673
t
gene_oi
gene_oi=df_sig$Uniprot[which((df_sig[,which(colnames(df_plotting)=='RF_mcnc')])>t)]
legnth(gene_oi)
length(gene_oi)
name='RF_mcnc'
#  name<-colnames(df_featimp)[index]
df_enrichment<-read.csv(paste0('../data/enrichment/',name,'.csv'), check.names = F)
t<-setdiff(colnames(df_enrichment),c('ID', 'Description'))
significant<-df_enrichment%>%filter(rowMins(as.matrix(df_enrichment%>%dplyr::select(-ID, -Description)), na.rm=T)<0.05)
if(nrow(significant)>2){
p_sig<-significant%>%column_to_rownames('Description')%>%dplyr::select(-ID)
p_sig<-p_sig[,which(colMins(as.matrix(p_sig), na.rm=T)<0.05)] #A lot of columns without any significant result!
p_sig<-p_sig[which(rowMins(as.matrix(p_sig), na.rm=T)<0.05),] #A
pheatmap<-pheatmap((-log10(p_sig)), border_color='white',
cluster_cols=F,
show_rownames=T,
na_col='white',
fontsize=13,
color =  c('grey',(colorRampPalette((brewer.pal(n = 7, name =
"YlOrRd")))(100))),
breaks = c(0,seq(-log10(0.05),-log10(min(p_sig, na.rm=T)),by=((-log10(min(p_sig, na.rm = T))+log10(0.05))/100))))
pheatmap
pheatmap<-pheatmap((-log10(p_sig)), border_color='white',
cluster_cols=F,
show_rownames=T,
na_col='white',
fontsize=13,
color =  c('grey',(colorRampPalette((brewer.pal(n = 7, name =
"YlOrRd")))(100))),
breaks = c(0,seq(-log10(0.05),-log10(min(p_sig, na.rm=T)),by=((-log10(min(p_sig, na.rm = T))+log10(0.05))/100))))
#  name<-colnames(df_featimp)[index]
df_enrichment<-read.csv(paste0('../data/enrichment/',name,'.csv'), check.names = F)
t<-setdiff(colnames(df_enrichment),c('ID', 'Description'))
significant<-df_enrichment%>%filter(rowMins(as.matrix(df_enrichment%>%dplyr::select(-ID, -Description)), na.rm=T)<0.05)
p_sig<-significant%>%column_to_rownames('Description')%>%dplyr::select(-ID)
p_sig<-p_sig[,which(colMins(as.matrix(p_sig), na.rm=T)<0.05)] #A lot of columns without any significant result!
p_sig<-p_sig[which(rowMins(as.matrix(p_sig), na.rm=T)<0.05),] #A
pheatmap<-pheatmap((-log10(p_sig)), border_color='white',
cluster_cols=F,
show_rownames=T,
na_col='white',
fontsize=13,
color =  c('grey',(colorRampPalette((brewer.pal(n = 7, name =
"YlOrRd")))(100))),
breaks = c(0,seq(-log10(0.05),-log10(min(p_sig, na.rm=T)),by=((-log10(min(p_sig, na.rm = T))+log10(0.05))/100))))
ggsave(pheatmap, filename=paste0('../plots/enrichment_',name,'.pdf'), height = 15, width = 15)
ggsave(pheatmap, filename=paste0('../plots/enrichment_',name,'.pdf'), height = 10, width = 15)
name='SVM_mcnc'
#  name<-colnames(df_featimp)[index]
df_enrichment<-read.csv(paste0('../data/enrichment/',name,'.csv'), check.names = F)
t<-setdiff(colnames(df_enrichment),c('ID', 'Description'))
significant<-df_enrichment%>%filter(rowMins(as.matrix(df_enrichment%>%dplyr::select(-ID, -Description)), na.rm=T)<0.05)
p_sig<-significant%>%column_to_rownames('Description')%>%dplyr::select(-ID)
p_sig<-p_sig[,which(colMins(as.matrix(p_sig), na.rm=T)<0.05)] #A lot of columns without any significant result!
p_sig<-p_sig[which(rowMins(as.matrix(p_sig), na.rm=T)<0.05),] #A
pheatmap<-pheatmap((-log10(p_sig)), border_color='white',
cluster_cols=F,
show_rownames=T,
na_col='white',
fontsize=13,
color =  c('grey',(colorRampPalette((brewer.pal(n = 7, name =
"YlOrRd")))(100))),
breaks = c(0,seq(-log10(0.05),-log10(min(p_sig, na.rm=T)),by=((-log10(min(p_sig, na.rm = T))+log10(0.05))/100))))
ggsave(pheatmap, filename=paste0('../plots/enrichment_',name,'.pdf'), height = 20, width = 15)
cdesc = read.csv("../data/GEXP_cdesc.csv")
head(cdesc)
colnames(cdesc)
# (1) Check Cell line data for comps with other data
sum_cp<-cdesc%>%
select(pert_iname,cell_id,pert_dose,pert_time)%>%
unique()
library("cmapR")
library("tidyverse")
library("dplyr")
View(cdesc)
# (1) Check Cell line data for comps with other data
sum_cp<-cdesc%>%
select(pert_iname,cell_id,pert_dose,pert_time)%>%
unique()
data_GC = sum_cp[sum_cp$pert_iname %in% Comp_GC$x,] # unique comp-cell-dose-time with GC data
library("tidyverse")
# (1) Check Cell line data for comps with other data
sum_cp<-cdesc%>%
select(pert_iname,cell_id,pert_dose,pert_time)%>%
unique()
